angular.module("ivh.multiSelect",["selectionModel"]),angular.module("ivh.multiSelect").directive("ivhMultiSelectAutofocus",["$timeout",function(a){"use strict";return{restrict:"A",link:function(b,c,d){a(function(){c[0].focus()})}}}]),angular.module("ivh.multiSelect").directive("ivhMultiSelectStayOpen",function(){"use strict";return{restrict:"A",link:function(a,b,c){b.on("click",function(a){var b=a.originalEvent||a;b.ivhMultiSelectIgnore=!0})}}}),angular.module("ivh.multiSelect").directive("ivhMultiSelect",function(){"use strict";return{scope:{items:"=ivhMultiSelectItems"},restrict:"AE",template:'\n<div class="ivh-multi-select dropdown" ng-class="{open: ms.isOpen}">\n<button class="btn btn-default dropdown-toggle" type="button"\nivh-multi-select-stay-open\nng-click="ms.isOpen = !ms.isOpen">\n<span ng-transclude></span>\n<span class="caret"></span>\n</button>\n<ul class="dropdown-menu" role="menu" ng-if="ms.isOpen"\nivh-multi-select-stay-open>\n<li role="presentation">\n<a class="ms-tools">\n<button class="btn btn-default btn-sm"\nng-click="ms.selectAllVisible()">\n<span class="glyphicon glyphicon-ok"></span>\nAll\n</button>\n<button class="btn btn-default btn-sm"\nng-click="ms.selectAllVisible(false)">\n<span class="glyphicon glyphicon-remove"></span>\nNone\n</button>\n<button class="pull-right btn btn-default btn-sm"\nng-click="ms.filterString = \'\'">\nClear\n</button>\n</a>\n</li>\n<li role="presentation">\n<a class="ms-tools">\n<input class="form-control" type="text"\nplaceholder="Search..."\nng-model="ms.filterString"\nivh-multi-select-autofocus>\n</a>\n</li>\n<li role="presentation" class="divider"></li>\n<li role="presentation" class="ms-item"\nng-repeat="item in ms.items | ivhMultiSelectPaginate:ms.ixPage:ms.sizePage"\nselection-model\nselection-model-mode="multi-additive"\nselection-model-type="checkbox">\n<a role="menuitem">\n<!-- Must stop propagation on checkbox clicks when nested within the `a`\ntag otherwise `a` fires a click too and undoes the first click. We\nwant to honor the actual checkbox click. -->\n<input type="checkbox" ng-click="$event.stopPropagation()" />\n{{:: item[ms.labelAttr]}}\n</a>\n</li>\n<li role="presentation" ng-hide="ms.items.length">\n<a class="ms-tools">\n<em class="text-muted">\nNothing to show\n</em>\n</a>\n</li>\n<li role="presentation" ng-if="ms.hasPager && ms.needsPager">\n<div class="text-center"\nivh-pager\nivh-pager-total="ms.items.length"\nivh-pager-page-number="ms.ixPage"\nivh-pager-page-size="ms.sizePage"\nivh-pager-button-size="\'sm\'">\n</div>\n</li>\n</ul>\n</div>\n',transclude:!0,controllerAs:"ms",controller:["$document","$scope","$injector","filterFilter","selectionModelOptions",function(a,b,c,d,e){var f=this,g=e.get().selectedAttribute,h="label",i=10,j=!0;f.labelAttr=h,f.isOpen=!1,f.items=b.items,f.filterString="",f.hasPager=j&&c.has("ivhPaginateFilter"),f.ixPage=0,f.sizePage=i,f.needsPager=!1,f.selectAllVisible=function(a){a=angular.isDefined(a)?a:!0;var b=d(f.items,f.filterString);angular.forEach(b,function(b){b[g]=a})},b.$watch("ms.filterString",function(a){var c=d(b.items,a);f.items=c,f.needsPager=c.length>i}),a.find("body").on("click",function(a){var c=a.originalEvent||a;c.ivhMultiSelectIgnore||(f.isOpen=!1,b.$digest())})}]}}),angular.module("ivh.multiSelect").filter("ivhMultiSelectPaginate",["$injector",function(a){"use strict";var b=function(a){return a};return a.has("ivhPaginateFilter")&&(b=a.get("ivhPaginateFilter")),b}]);